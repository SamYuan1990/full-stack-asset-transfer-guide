#
# SPDX-License-Identifier: Apache-2.0
#
---
- name: Install and approve chaincode
  hosts: localhost
  vars:
    wallet: "/_cfg"
    smart_contract_package: /_cfg/conga-nft-contract-v0.1.1.tgz
    smart_contract_version: "1.0.0"
    smart_contract_sequence: 1    
    smart_contract_name: conga-nft-contract
  vars_files:
    - /_cfg/fabric-common-vars.yml
    - /_cfg/fabric-org1-vars.yml
    - /_cfg/auth-vars.yml    
  tasks:
    - name: Install the chaincode on the peer
      ibm.blockchain_platform.installed_chaincode:
        api_endpoint: "{{ api_endpoint }}"
        api_authtype: "{{ api_authtype }}"
        api_key: "{{ api_key }}"
        api_secret: "{{ api_secret | default(omit) }}"
        api_token_endpoint: "{{ api_token_endpoint | default(omit) }}"
        peer: "{{ org1_peer_name }}"
        identity: "{{ wallet }}/{{ org1_name }} Admin.json"
        msp_id: "{{ org1_msp_id }}"
        path: "{{ smart_contract_package }}"
      register: result

    - name: Approve the chaincode on the channel
      ibm.blockchain_platform.approved_chaincode:
        api_endpoint: "{{ api_endpoint }}"
        api_authtype: "{{ api_authtype }}"
        api_key: "{{ api_key }}"
        api_secret: "{{ api_secret | default(omit) }}"
        api_token_endpoint: "{{ api_token_endpoint | default(omit) }}"
        peer: "{{ org1_peer_name }}"
        identity: "{{ wallet }}/{{ org1_name }} Admin.json"
        msp_id: "{{ org1_msp_id }}"
        channel: "{{ channel_name }}"
        name: "{{ smart_contract_name }}"
        version: "{{ smart_contract_version }}"
        package_id: "{{ result.installed_chaincode.package_id }}"
        sequence: "{{ smart_contract_sequence }}"
        endorsement_policy: "{{ smart_contract_endorsement_policy | default(omit) }}"
        collections_config: "{{ smart_contract_collections_file | default(omit) }}"
